{"version":3,"sources":["webpack://Awezoom/webpack/universalModuleDefinition","webpack://Awezoom/webpack/bootstrap","webpack://Awezoom/./src/index.js"],"names":["requestAnimationFrame","lastTime","vendors","x","length","window","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","optimizedResize","running","runCallback","throttledResize","addResizeListener","handleResize","addEventListener","removeResizeListener","removeEventListener","hasOwnProp","Object","prototype","hasOwnProperty","parseSettings","settings","defaultSettings","zoomLevel","minZoomLevel","maxZoomLevel","zoomFactor","alignment","horizontal","vertical","zoomEasing","zoomDuration","focalPoint","y","beforeZoomCallback","afterZoomCallback","resultSettings","prop","call","setCSSStyles","element","styles","style","undefined","vendorPrefixes","styleName","toUpperCase","substr","getTransitionEndEvent","document","createElement","transitions","transition","oTransition","mozTransition","webkitTransition","transitionEndEvent","valueBetween","value","min","console","warn","Awezoom","zoomContainerElement","querySelector","nodeType","children","innerHTML","zoomContentElement","placeholderElement","appendChild","overflow","position","transform","transformOrigin","state","isZooming","zoomContainerSize","contentSize","contentOffset","scrollPosition","update","zoom","calculateZoomContainerSize","calculateContentSize","calculateScrollPosition","currentZoomLevel","currentZoomContainerSize","currentContentSize","targetContentOffset","determineIntendedContentOffset","width","height","transitionDuration","transitionTimingFunction","currentContentOffset","currentScrollPosition","zoomedContentSize","targetTransformOrigin","determineTransformOrigin","contentOffsetAfterZooming","focalPointInZoomedContent","findRawCoordinatesInZoomedContent","viewportCoordinates","findRawCoordinatesInViewport","maxScrollPosition","newScrollPosition","transformOffsetToCompensateOrigin","transformOffset","setScrollPosition","afterTransition","replace","triggerReflow","unzoomedContentSize","widthFactor","heightFactor","offsetHeight","clientWidth","clientHeight","offsetWidth","coordinates","coordinatesInUnzoomedContent","scrollLeft","scrollTop","alignmentSettings","availableSpace","focalPointInUnzoomedContent","findViewportCoordinatesInRawContent","zoomContainerSizeAroundFocalPoint","top","right","bottom","left","contentSizeAroundFocalPointAfterZooming","newZoomLevel","targetFocalPoint","contentMarginAfterZooming","determineContentMargin","pinchEventType","scale","lastPinchFocalPoint","lastPinchOffset","lastPinchOrigin","lastPinchZoomLevel"],"mappings":"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","file":"awezoom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Awezoom\"] = factory();\n\telse\n\t\troot[\"Awezoom\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/*!\n* awezoom v1.0.0\n* https://github.com/JohannUlbrich/awezoom\n*\n* Copyright (c) 2016 Johann Ulbrich <info@johann-ulbrich.de>\n* Released under the MIT license\n*\n* Date: 2018-03-18\n*/\n\n// requestAnimationFrame polyfill\n// http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n(function requestAnimationFrame() {\n  let lastTime = 0;\n  const vendors = ['moz', 'ms', 'o', 'webkit'];\n\n  for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[`${vendors[x]}RequestAnimationFrame`];\n    window.cancelAnimationFrame = window[`${vendors[x]}CancelAnimationFrame`] || window[`${vendors[x]}CancelRequestAnimationFrame`];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = (callback) => {\n      const currTime = new Date().getTime();\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      const id = window.setTimeout(() => {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n\n      lastTime = currTime + timeToCall;\n\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = (id) => {\n      clearTimeout(id);\n    };\n  }\n}());\n\n\nconst optimizedResize = (function optimizedResize() {\n  let callback;\n  let running = false;\n\n  const runCallback = function runCallback() {\n    callback();\n\n    running = false;\n  };\n\n  // fired on resize event\n  const throttledResize = function throttledResize() {\n    if (!running) {\n      running = true;\n\n      window.requestAnimationFrame(runCallback);\n    }\n  };\n\n  return {\n    addResizeListener: function addResizeListener(handleResize) {\n      window.addEventListener('resize', throttledResize);\n\n      callback = handleResize;\n    },\n    removeResizeListener: function removeResizeListener() {\n      window.removeEventListener('resize', throttledResize);\n    },\n  };\n}());\n\n\nconst hasOwnProp = Object.prototype.hasOwnProperty;\n\n\nconst parseSettings = function parseSettings(settings) {\n  if (!settings || typeof settings !== 'object') {\n    return;\n  }\n\n  // Default settings\n  const defaultSettings = {\n    // Initial zoom level\n    zoomLevel: 1,\n\n    // Minimum level to zoom\n    minZoomLevel: 0.125,\n\n    // Maximum level to zoom\n    maxZoomLevel: 32,\n\n    // Default factor to zoom in or out\n    zoomFactor: 2,\n\n    // Alignment of the content if it is smaller than the zoom container\n    alignment: {\n        horizontal: 'center', // left, center, right\n        vertical: 'center' // top, center, bottom\n    },\n\n    // CSS transition-timing-function\n    zoomEasing: 'ease-in-out',\n\n    // CSS transition-duration in milliseconds\n    zoomDuration: '300ms',\n\n    // Default point to zoom in or out\n    focalPoint: {\n      x: 0,\n      y: 0,\n    },\n\n    // updateOnResize: false,\n    // showScrollbars: true,\n\n    // onInit: function() {},\n    // onDestroy: function() {},\n    beforeZoomCallback: function() {},\n    afterZoomCallback: function() {}\n  };\n\n  let resultSettings = {};\n\n  // TODO: do type check and error alert\n  for (let prop in defaultSettings) {\n    if (hasOwnProp.call(defaultSettings, prop)) {\n      resultSettings[prop] = settings[prop] || defaultSettings[prop];\n    }\n  }\n\n  return resultSettings;\n};\n\n\n// TODO: cache prefixes\nconst setCSSStyles = function setCSSStyles(element, styles) {\n\n  for (let style in styles) {\n    if (hasOwnProp.call(styles, style)) {\n\n      if (element.style[style] !== undefined) {\n        element.style[style] = styles[style];\n      } else { // Check vendor prefixes\n        const vendorPrefixes = ['webkit', 'Moz', 'ms', 'O'];\n        const styleName = style[0].toUpperCase() + style.substr(1);\n\n        for (let prop in vendorPrefixes) {\n          if (hasOwnProp.call(vendorPrefixes, prop)) {\n            if (element.style[vendorPrefixes[prop] + styleName] !== undefined) {\n              element.style[vendorPrefixes[prop] + styleName] = styles[style];\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\n\n// TODO: check compatibility (IE 9 dosn't support transition end event)\nconst getTransitionEndEvent = function getTransitionEndEvent() {\n  const element = document.createElement('div');\n  const transitions = {\n    transition: 'transitionend',\n    oTransition: 'oTransitionEnd',\n    mozTransition: 'transitionend',\n    webkitTransition: 'webkitTransitionEnd',\n  };\n  let transitionEndEvent;\n\n  for (let transition in transitions) {\n    if (element.style[transition] !== undefined) {\n      transitionEndEvent = transitions[transition];\n      break;\n    }\n  }\n\n  return transitionEndEvent;\n};\n\n\nconst valueBetween = function valueBetween(value, min, max) {\n  if (min > max) {\n    console.warn(`Warning: The minimum value ${min} is bigger than the the maximum value ${max}.`);\n  }\n\n  return (Math.min(max, Math.max(min, value)));\n};\n\n\nexport default class Awezoom {\n  constructor(element, settings) {\n    let zoomContainerElement;\n\n    // Get zoom container element\n    if (typeof element === 'string') {\n      zoomContainerElement = document.querySelector(element);\n    } else if (element.nodeType && element.nodeType === 1) {\n      zoomContainerElement = element;\n    }\n\n    // Ensure that the zoom container exist\n    if (!zoomContainerElement) {\n      console.warn('Warning: The zoom container element was not found.');\n\n      return;\n    }\n\n    // Parse settings\n    this.settings = parseSettings(settings);\n    \n    // TODO: Always wrap content when chrome mobile transition lag bug is solved\n    const children = zoomContainerElement.children;\n\n    // Wrap content if there is more than one child\n    if (children.length > 1) {\n      zoomContainerElement.innerHTML = `<div>${zoomContainerElement.innerHTML}</div>`;\n    }\n\n    // Get zoom content element\n    const zoomContentElement = children[0];\n\n    // Add a placeholder element\n    const placeholderElement = document.createElement('div');\n    zoomContainerElement.appendChild(placeholderElement);\n\n    // Place content into placeholder\n    placeholderElement.appendChild(zoomContentElement);\n\n    // TODO: Use when chrome mobile transition lag bug is solved \n    // // Prepare DOM\n    // zoomContainerElement.innerHTML = `<div><div>${zoomContainerElement.innerHTML}</div></div>`;\n\n    // // Get elements\n    // const placeholderElement = zoomContainerElement.children[0];\n    // const zoomContentElement = placeholderElement.children[0];\n\n    // Set initial styles\n    setCSSStyles(zoomContainerElement, {\n      overflow: 'scroll',\n      position: 'relative',\n    });\n    setCSSStyles(placeholderElement, {\n      position: 'absolute',\n      overflow: 'hidden',\n      transform: 'translateZ(0)'\n    });\n    setCSSStyles(zoomContentElement, {\n      position: 'absolute',\n      transformOrigin: '0 0 0'\n    });\n\n    // Cache internal state\n    this.state = {\n      zoomContainerElement,\n      zoomContentElement,\n      placeholderElement,\n      isZooming: false,\n      transitionEndEvent: getTransitionEndEvent(),\n      alignment: this.settings.alignment,\n      zoomLevel: this.settings.zoomLevel,\n      zoomContainerSize: {},\n      contentSize: {},\n      contentOffset: {\n        x: 0,\n        y: 0,\n      },\n      scrollPosition: {},\n    };\n\n    this.update();\n\n    // TODO: unbind after destroy\n    optimizedResize.addResizeListener(() => {\n      this.position();\n    });\n\n    // Set initial zoom level and position\n    this.zoom(this.state.zoomLevel, {\n      x: 0,\n      y: 0,\n    }, '0ms');\n  }\n\n  update() {\n    this.state.zoomContainerSize = this.calculateZoomContainerSize();\n    this.state.contentSize = this.calculateContentSize();\n\n    // TODO: check if necessary\n    this.state.scrollPosition = this.calculateScrollPosition();\n  }\n\n  position(zoomDuration = this.settings.zoomDuration, zoomEasing = this.settings.zoomEasing) {\n    this.update();\n\n    const currentZoomLevel = this.state.zoomLevel;\n    const currentZoomContainerSize = this.state.zoomContainerSize;\n    const currentContentSize = this.state.contentSize;\n    const targetContentOffset = this.determineIntendedContentOffset();\n\n    if (currentZoomContainerSize.width > currentContentSize.width) {\n      setCSSStyles(this.state.placeholderElement, {\n        width: '100%',\n      });\n    }\n\n    if (currentZoomContainerSize.height > currentContentSize.height) {\n      setCSSStyles(this.state.placeholderElement, {\n        height: '100%',\n      });\n    }\n\n    setCSSStyles(this.state.zoomContentElement, {\n      transitionDuration: zoomDuration,\n      transitionTimingFunction: zoomEasing,\n      transformOrigin: '0 0 0',\n      transform: `matrix(${currentZoomLevel}, 0, 0, ${currentZoomLevel}, ${targetContentOffset.x}, ${targetContentOffset.y})`,\n    });\n\n    setCSSStyles(this.state.placeholderElement, {\n      width: `${currentContentSize.width + targetContentOffset.x}px`,\n      height: `${currentContentSize.height + targetContentOffset.y}px`,\n    });\n\n    this.state.contentOffset = targetContentOffset;\n  }\n\n  // Zoom\n  zoom(zoomLevel = this.settings.zoomLevel, focalPoint = this.settings.focalPoint,\n    zoomDuration = this.settings.zoomDuration, zoomEasing = this.settings.zoomEasing, \n    beforeZoomCallback = this.settings.beforeZoomCallback, afterZoomCallback = this.settings.afterZoomCallback) {\n    if (this.state.isZooming) {\n      return;\n    }\n\n    if (zoomLevel < this.settings.minZoomLevel || zoomLevel > this.settings.maxZoomLevel) {\n      return;\n    }\n\n    this.state.isZooming = true;\n\n    // Call before zoom callback method\n    beforeZoomCallback();\n\n    this.update();\n\n    const currentZoomLevel = this.state.zoomLevel;\n    const currentContentOffset = this.state.contentOffset;\n    const currentContentSize = this.state.contentSize;\n    const currentScrollPosition = this.state.scrollPosition;\n    const zoomedContentSize = this.calculateContentSize(zoomLevel);\n    const targetTransformOrigin = this.determineTransformOrigin(focalPoint, currentZoomLevel, zoomLevel);\n    const contentOffsetAfterZooming = this.determineIntendedContentOffset(zoomLevel);\n\n    let transitionEndEvent;\n\n    // Calculate new scroll position\n    const zoomContainerSize = this.state.zoomContainerSize;\n    const focalPointInZoomedContent = this.findRawCoordinatesInZoomedContent(targetTransformOrigin, zoomLevel);\n    const viewportCoordinates = this.findRawCoordinatesInViewport(targetTransformOrigin);\n    const maxScrollPosition = {\n      x: (zoomedContentSize.width - zoomContainerSize.width > 0) ? (zoomedContentSize.width - zoomContainerSize.width) : 0,\n      y: (zoomedContentSize.height - zoomContainerSize.height > 0) ? (zoomedContentSize.height - zoomContainerSize.height) : 0,\n    };\n    const newScrollPosition = {\n      x: valueBetween(focalPointInZoomedContent.x - viewportCoordinates.x, 0, maxScrollPosition.x),\n      y: valueBetween(focalPointInZoomedContent.y - viewportCoordinates.y, 0, maxScrollPosition.y),\n    };\n\n    // Calculate new offset\n    const transformOffsetToCompensateOrigin = { // Compensate origin\n      x: (targetTransformOrigin.x * currentZoomLevel) - targetTransformOrigin.x,\n      y: (targetTransformOrigin.y * currentZoomLevel) - targetTransformOrigin.y,\n    };\n    const transformOffset = {\n      x: transformOffsetToCompensateOrigin.x + currentContentOffset.x,\n      y: transformOffsetToCompensateOrigin.y + currentContentOffset.y,\n    };\n\n    // On zoom in: resize placeholder element to stretch content for scrolling\n    if (zoomLevel > currentZoomLevel) {\n      transformOffset.x += newScrollPosition.x - currentScrollPosition.x;\n      transformOffset.y += newScrollPosition.y - currentScrollPosition.y;\n\n      setCSSStyles(this.state.placeholderElement, {\n        width: `${zoomedContentSize.width + contentOffsetAfterZooming.x}px`,\n        height: `${zoomedContentSize.height + contentOffsetAfterZooming.y}px`,\n      });\n\n      this.setScrollPosition(newScrollPosition);\n\n    // On zoom out: resize placeholder to remain content size until transition has ended\n    } else {\n      setCSSStyles(this.state.placeholderElement, {\n        width: `${currentContentSize.width + currentContentOffset.x}px`,\n        height: `${currentContentSize.height + currentContentOffset.y}px`,\n      });\n    }\n\n    // Function to call after transition has ended\n    const afterTransition = () => {\n      // Reinsert content\n      setCSSStyles(this.state.zoomContentElement, {\n        transitionDuration: '',\n        transitionTimingFunction: '',\n        transformOrigin: '0 0 0',\n        transform: `matrix(${zoomLevel}, 0, 0, ${zoomLevel}, ${contentOffsetAfterZooming.x}, ${contentOffsetAfterZooming.y})`,\n      });\n\n      // On zoom out resize placeholder and scroll after transition\n      if (zoomLevel <= currentZoomLevel) {\n        setCSSStyles(this.state.placeholderElement, {\n          width: `${zoomedContentSize.width + contentOffsetAfterZooming.x}px`,\n          height: `${zoomedContentSize.height + contentOffsetAfterZooming.y}px`,\n        });\n\n        this.setScrollPosition(newScrollPosition);\n      }\n\n      // Remove event listener\n      if (transitionEndEvent) {\n        this.state.zoomContentElement.removeEventListener(transitionEndEvent, afterTransition, false);\n      }\n\n      // Update states\n      this.state.zoomLevel = zoomLevel;\n      this.state.contentSize = zoomedContentSize;\n      this.state.contentOffset = contentOffsetAfterZooming;\n\n      this.state.isZooming = false;\n\n      // Call after zoom callback method\n      afterZoomCallback();\n    };\n\n    if (zoomDuration.replace(/[^\\d\\.,]/g, '') <= 0 || currentZoomLevel === zoomLevel) {\n      // Call manually if there is no transition event\n      afterTransition();\n    } else {\n      transitionEndEvent = this.state.transitionEndEvent;\n\n      // Position content and set focal point\n      setCSSStyles(this.state.zoomContentElement, {\n        transitionDuration: '',\n        transitionTimingFunction: '',\n        transformOrigin: `${targetTransformOrigin.x}px ${targetTransformOrigin.y}px 0`,\n        transform: `matrix(${currentZoomLevel}, 0, 0, ${currentZoomLevel}, ${transformOffset.x}, ${transformOffset.y})`,\n      });\n\n      this.triggerReflow();\n\n      // Add event listener to execute afterTransition()\n      this.state.zoomContentElement.addEventListener(transitionEndEvent, afterTransition, false);\n\n      // Zoom the content\n      setCSSStyles(this.state.zoomContentElement, {\n        transitionDuration: zoomDuration,\n        transitionTimingFunction: zoomEasing,\n        transform: `matrix(${zoomLevel}, 0, 0, ${zoomLevel}, ${transformOffset.x}, ${transformOffset.y})`,\n      });\n    }\n  }\n\n  zoomIn(focalPoint, zoomDuration, zoomEasing) {\n    this.zoom(this.state.zoomLevel * this.settings.zoomFactor, focalPoint, zoomDuration, zoomEasing);\n  }\n\n  zoomOut(focalPoint, zoomDuration, zoomEasing) {\n    this.zoom(this.state.zoomLevel / this.settings.zoomFactor, focalPoint, zoomDuration, zoomEasing);\n  }\n\n  zoomToFit(zoomDuration, zoomEasing) {\n    const zoomContainerSize = this.state.zoomContainerSize;\n    const unzoomedContentSize = this.calculateContentSize(1);\n    const widthFactor = zoomContainerSize.width / unzoomedContentSize.width;\n    const heightFactor = zoomContainerSize.height / unzoomedContentSize.height;\n\n    let zoomLevel;\n\n    if (widthFactor < heightFactor) {\n      zoomLevel = widthFactor;\n    } else {\n      zoomLevel = heightFactor;\n    }\n\n    this.zoom(zoomLevel, {\n      x: 0,\n      y: 0,\n    }, zoomDuration, zoomEasing);\n  }\n\n  triggerReflow() {\n    // Trigger a reflow to set the transform matrix above before using a transition\n    return this.state.zoomContentElement.offsetHeight;\n  }\n\n  calculateZoomContainerSize() {\n    const element = this.state.zoomContainerElement;\n\n    // the inner size of an element including the padding\n    return {\n      width: element.clientWidth,\n      height: element.clientHeight,\n    };\n  }\n\n  calculateContentSize(zoomLevel = this.state.zoomLevel) {\n    const element = this.state.zoomContentElement;\n\n    // offsetWidth and offsetHeight is the size of an element including padding,\n    // borders and scrollbars the size isn't affected by CSS transformations,\n    // so it returns the original size\n    return {\n      width: element.offsetWidth * zoomLevel,\n      height: element.offsetHeight * zoomLevel,\n    };\n  }\n\n  findViewportCoordinatesInRawContent(coordinates) {\n    const currentScrollPosition = this.state.scrollPosition;\n    const contentOffset = this.state.contentOffset;\n    const currentZoomLevel = this.state.zoomLevel;\n    const unzoomedContentSize = this.calculateContentSize(1);\n\n    const coordinatesInUnzoomedContent = {\n      x: (coordinates.x + currentScrollPosition.x - contentOffset.x) / currentZoomLevel,\n      y: (coordinates.y + currentScrollPosition.y - contentOffset.y) / currentZoomLevel,\n    };\n\n    return {\n      x: valueBetween(coordinatesInUnzoomedContent.x, 0, unzoomedContentSize.width),\n      y: valueBetween(coordinatesInUnzoomedContent.y, 0, unzoomedContentSize.height),\n    };\n  }\n\n  findRawCoordinatesInViewport(coordinates) {\n    const currentZoomLevel = this.state.zoomLevel;\n    const currentContentOffset = this.state.contentOffset;\n    const currentScrollPosition = this.state.scrollPosition;\n\n    return {\n      x: (coordinates.x * currentZoomLevel) + (currentContentOffset.x - currentScrollPosition.x),\n      y: (coordinates.y * currentZoomLevel) + (currentContentOffset.y - currentScrollPosition.y),\n    };\n  }\n\n  findRawCoordinatesInZoomedContent(coordinates, zoomLevel) {\n    return {\n      x: coordinates.x * zoomLevel,\n      y: coordinates.y * zoomLevel,\n    };\n  }\n\n  calculateScrollPosition() {\n    const element = this.state.zoomContainerElement;\n\n    return {\n      x: element.scrollLeft,\n      y: element.scrollTop,\n    };\n  }\n\n  setScrollPosition(coordinates) {\n    const element = this.state.zoomContainerElement;\n\n    // Scroll\n    element.scrollLeft = coordinates.x;\n    element.scrollTop = coordinates.y;\n\n    // Update state\n    this.state.scrollPosition = coordinates;\n  }\n\n  determineIntendedContentOffset(zoomLevel = this.state.zoomLevel) {\n    const zoomContainerSize = this.state.zoomContainerSize;\n    const alignmentSettings = this.state.alignment;\n    const zoomedContentSize = this.calculateContentSize(zoomLevel);\n\n    const availableSpace = {\n      width: zoomContainerSize.width - zoomedContentSize.width,\n      height: zoomContainerSize.height - zoomedContentSize.height,\n    };\n\n    const contentOffset = {\n      x: 0,\n      y: 0,\n    };\n\n    if (availableSpace.width > 0) {\n      switch (alignmentSettings.horizontal) {\n        case 'left': {\n          contentOffset.x = 0;\n          break;\n        }\n        case 'right': {\n          contentOffset.x = availableSpace.width;\n          break;\n        }\n        case 'center':\n        default: {\n          contentOffset.x = availableSpace.width / 2;\n        }\n      }\n    }\n\n    if (availableSpace.height > 0) {\n      switch (alignmentSettings.vertical) {\n        case 'top': {\n          contentOffset.y = 0;\n          break;\n        }\n        case 'bottom': {\n          contentOffset.y = availableSpace.height;\n          break;\n        }\n        case 'center':\n        default: {\n          contentOffset.y = availableSpace.height / 2;\n        }\n      }\n    }\n\n    return contentOffset;\n  }\n\n  determineContentMargin(zoomLevel, focalPoint) {\n    const zoomContainerSize = this.state.zoomContainerSize;\n    const zoomedContentSize = this.calculateContentSize(zoomLevel);\n    const focalPointInUnzoomedContent = this.findViewportCoordinatesInRawContent(focalPoint);\n    const focalPointInZoomedContent = this.findRawCoordinatesInZoomedContent(focalPointInUnzoomedContent, zoomLevel);\n\n    const zoomContainerSizeAroundFocalPoint = {\n      top: focalPoint.y,\n      right: zoomContainerSize.width - focalPoint.x,\n      bottom: zoomContainerSize.height - focalPoint.y,\n      left: focalPoint.x,\n    };\n\n    const contentSizeAroundFocalPointAfterZooming = {\n      top: focalPointInZoomedContent.y,\n      right: zoomedContentSize.width - focalPointInZoomedContent.x,\n      bottom: zoomedContentSize.height - focalPointInZoomedContent.y,\n      left: focalPointInZoomedContent.x,\n    };\n\n    return {\n      top: zoomContainerSizeAroundFocalPoint.top - contentSizeAroundFocalPointAfterZooming.top,\n      right: zoomContainerSizeAroundFocalPoint.right - contentSizeAroundFocalPointAfterZooming.right,\n      bottom: zoomContainerSizeAroundFocalPoint.bottom - contentSizeAroundFocalPointAfterZooming.bottom,\n      left: zoomContainerSizeAroundFocalPoint.left - contentSizeAroundFocalPointAfterZooming.left,\n    };\n  }\n\n  determineTransformOrigin(focalPoint, currentZoomLevel, newZoomLevel) {\n    const currentContentOffset = this.state.contentOffset;\n    const alignmentSettings = this.state.alignment;\n    const zoomContainerSize = this.state.zoomContainerSize;\n    const unzoomedContentSize = this.calculateContentSize(1);\n    const currentContentSize = this.calculateContentSize(currentZoomLevel);\n    const zoomedContentSize = this.calculateContentSize(newZoomLevel);\n    const zoomFactor = newZoomLevel / currentZoomLevel;\n\n    // Ensure that focal point isn't out of content\n    const targetFocalPoint = {\n      x: valueBetween(focalPoint.x, currentContentOffset.x, currentContentSize.width + currentContentOffset.x),\n      y: valueBetween(focalPoint.y, currentContentOffset.y, currentContentSize.height + currentContentOffset.y),\n    };\n\n    const contentMarginAfterZooming = this.determineContentMargin(newZoomLevel, targetFocalPoint);\n    const transformOrigin = this.findViewportCoordinatesInRawContent(targetFocalPoint);\n\n    // Position content when smaller than the zoom area\n    // but just if the content size is smaller than the zoom container size, before and after transition\n    if (currentContentSize.width < zoomContainerSize.width && zoomedContentSize.width < zoomContainerSize.width) {\n      switch (alignmentSettings.horizontal) {\n        case 'left': {\n          transformOrigin.x = 0;\n          break;\n        }\n        case 'right': {\n          transformOrigin.x = unzoomedContentSize.width;\n          break;\n        }\n        case 'center':\n        default: {\n          transformOrigin.x = unzoomedContentSize.width / 2;\n        }\n      }\n\n    // Adjust position on zoom out if the content size is bigger than the zoom container size, before and after transition\n    // and if there is a positive margin on just one side\n    // or when the content size trespasses the zoom container size and if there is a positive margin on just one side\n    } else if (zoomedContentSize.width >= zoomContainerSize.width) {\n      if (contentMarginAfterZooming.right > 0) {\n        transformOrigin.x -= contentMarginAfterZooming.right / (zoomFactor - 1) / currentZoomLevel;\n      }\n\n      if (contentMarginAfterZooming.left > 0) {\n        transformOrigin.x += contentMarginAfterZooming.left / (zoomFactor - 1) / currentZoomLevel;\n      }\n\n    // Adjust position on zoom out when the content size trespasses the zoom container size\n    } else if (currentContentSize.width >= zoomContainerSize.width && zoomedContentSize.width <= zoomContainerSize.width) {\n      switch (alignmentSettings.horizontal) {\n        case 'left': {\n          transformOrigin.x += contentMarginAfterZooming.left / (zoomFactor - 1) / currentZoomLevel;\n          break;\n        }\n        case 'right': {\n          transformOrigin.x -= contentMarginAfterZooming.right / (zoomFactor - 1) / currentZoomLevel;\n          break;\n        }\n        case 'center':\n        default: {\n          transformOrigin.x -= (contentMarginAfterZooming.right - contentMarginAfterZooming.left) / (zoomFactor - 1) / currentZoomLevel / 2;\n        }\n      }\n    }\n\n    // Position content when smaller than the zoom area\n    // but just if the content size is smaller than the zoom container size, before and after transition\n    if (currentContentSize.height < zoomContainerSize.height && zoomedContentSize.height < zoomContainerSize.height) {\n      switch (alignmentSettings.vertical) {\n        case 'top': {\n          transformOrigin.y = 0;\n          break;\n        }\n        case 'bottom': {\n          transformOrigin.y = unzoomedContentSize.height;\n          break;\n        }\n        case 'center':\n        default: {\n          transformOrigin.y = unzoomedContentSize.height / 2;\n        }\n      }\n\n    // Adjust position on zoom out if the content size is bigger than the zoom container size, before and after transition\n    // and if there is a positive margin on just one side\n    // or when the content size trespasses the zoom container size and if there is a positive margin on just one side\n    } else if (zoomedContentSize.height >= zoomContainerSize.height) {\n      if (contentMarginAfterZooming.bottom > 0) {\n        transformOrigin.y -= contentMarginAfterZooming.bottom / (zoomFactor - 1) / currentZoomLevel;\n      }\n\n      if (contentMarginAfterZooming.top > 0) {\n        transformOrigin.y += contentMarginAfterZooming.top / (zoomFactor - 1) / currentZoomLevel;\n      }\n\n    // Adjust position on zoom out when the content size trespasses the zoom container size\n    } else if (currentContentSize.height >= zoomContainerSize.height && zoomedContentSize.height <= zoomContainerSize.height) {\n      switch (alignmentSettings.vertical) {\n        case 'top': {\n          transformOrigin.y += contentMarginAfterZooming.top / (zoomFactor - 1) / currentZoomLevel;\n          break;\n        }\n        case 'bottom': {\n          transformOrigin.y -= contentMarginAfterZooming.bottom / (zoomFactor - 1) / currentZoomLevel;\n          break;\n        }\n        case 'center':\n        default: {\n          transformOrigin.y -= (contentMarginAfterZooming.bottom - contentMarginAfterZooming.top) / (zoomFactor - 1) / currentZoomLevel / 2;\n        }\n      }\n    }\n\n    return transformOrigin;\n  }\n\n  pinch(pinchEventType, focalPoint, scale) {\n    switch (pinchEventType) {\n      case 'pinchstart': {\n        if (this.state.isZooming) {\n          return;\n        }\n\n        this.state.isZooming = true;\n\n        const currentZoomLevel = this.state.zoomLevel;\n        const currentZoomContainerSize = this.state.zoomContainerSize;\n        const currentContentSize = this.state.contentSize;\n        const currentContentOffset = this.state.contentOffset;\n        const transformOrigin = this.findViewportCoordinatesInRawContent(focalPoint);\n        const transformOffsetToCompensateOrigin = { // Compensate origin\n          x: (transformOrigin.x * currentZoomLevel) - transformOrigin.x,\n          y: (transformOrigin.y * currentZoomLevel) - transformOrigin.y,\n        };\n        const transformOffset = {\n          x: transformOffsetToCompensateOrigin.x + currentContentOffset.x,\n          y: transformOffsetToCompensateOrigin.y + currentContentOffset.y,\n        };\n\n        if (currentZoomContainerSize.width > currentContentSize.width) {\n          setCSSStyles(this.state.placeholderElement, {\n            width: '100%',\n          });\n        }\n\n        if (currentZoomContainerSize.height > currentContentSize.height) {\n          setCSSStyles(this.state.placeholderElement, {\n            height: '100%',\n          });\n        }\n\n        // Position content and set focal point\n        setCSSStyles(this.state.zoomContentElement, {\n          transitionDuration: '',\n          transitionTimingFunction: '',\n          transformOrigin: `${transformOrigin.x}px ${transformOrigin.y}px 0`,\n          transform: `matrix(${currentZoomLevel}, 0, 0, ${currentZoomLevel}, ${transformOffset.x}, ${transformOffset.y})`,\n        });\n\n        this.state.lastPinchFocalPoint = focalPoint;\n        this.state.lastPinchOffset = transformOffset;\n        this.state.lastPinchOrigin = transformOrigin;\n        this.state.lastPinchZoomLevel = currentZoomLevel;\n\n        break;\n      }\n      case 'pinchmove': {\n        const zoomLevel = scale * this.state.zoomLevel;\n\n        if (zoomLevel < this.settings.minZoomLevel || zoomLevel > this.settings.maxZoomLevel) {\n          return;\n        }\n\n        // Zoom\n        setCSSStyles(this.state.zoomContentElement, {\n          transform: `matrix(${zoomLevel}, 0, 0, ${zoomLevel}, ${this.state.lastPinchOffset.x}, ${this.state.lastPinchOffset.y})`,\n        });\n\n        this.state.lastPinchZoomLevel = zoomLevel;\n\n        break;\n      }\n      case 'pinchend':\n      default: {\n        if (!this.state.isZooming) {\n          return;\n        }\n\n        const zoomEasing = this.settings.zoomEasing;\n        const zoomDuration = this.settings.zoomDuration;\n        const zoomLevel = this.state.lastPinchZoomLevel;\n\n        const transitionEndEvent = this.state.transitionEndEvent;\n        const zoomContainerSize = this.state.zoomContainerSize;\n        const zoomedContentSize = this.calculateContentSize(zoomLevel);\n\n        // Calculate Offset\n        const contentOffsetAfterZooming = this.determineIntendedContentOffset(zoomLevel);\n        const contentMarginAfterZooming = this.determineContentMargin(zoomLevel, this.state.lastPinchFocalPoint);\n        const transformOffset = {\n          x: this.state.lastPinchOffset.x,\n          y: this.state.lastPinchOffset.y,\n        };\n\n        if (zoomedContentSize.width > zoomContainerSize.width) {\n          transformOffset.x -= contentMarginAfterZooming.left > 0 ? contentMarginAfterZooming.left : 0;\n          transformOffset.x += contentMarginAfterZooming.right > 0 ? contentMarginAfterZooming.right : 0;\n        } else {\n          transformOffset.x += (contentOffsetAfterZooming.x - contentMarginAfterZooming.left);\n        }\n\n        if (zoomedContentSize.height > zoomContainerSize.height) {\n          transformOffset.y -= contentMarginAfterZooming.top > 0 ? contentMarginAfterZooming.top : 0;\n          transformOffset.y += contentMarginAfterZooming.bottom > 0 ? contentMarginAfterZooming.bottom : 0;\n        } else {\n          transformOffset.y += (contentOffsetAfterZooming.y - contentMarginAfterZooming.top);\n        }\n\n        // Calculate scroll position\n        const focalPointInZoomedContent = this.findRawCoordinatesInZoomedContent(this.state.lastPinchOrigin, zoomLevel);\n        const viewportCoordinates = this.state.lastPinchFocalPoint;\n        const maxScrollPosition = {\n          x: (zoomedContentSize.width - zoomContainerSize.width > 0) ? (zoomedContentSize.width - zoomContainerSize.width) : 0,\n          y: (zoomedContentSize.height - zoomContainerSize.height > 0) ? (zoomedContentSize.height - zoomContainerSize.height) : 0,\n        };\n        const newScrollPosition = {\n          x: valueBetween(focalPointInZoomedContent.x - viewportCoordinates.x, 0, maxScrollPosition.x),\n          y: valueBetween(focalPointInZoomedContent.y - viewportCoordinates.y, 0, maxScrollPosition.y),\n        };\n\n        // Function to call after transition has ended\n        const afterTransition = () => {\n          // Reinsert content\n          setCSSStyles(this.state.zoomContentElement, {\n            transitionDuration: '',\n            transitionTimingFunction: '',\n            transformOrigin: '0 0 0',\n            transform: `matrix(${zoomLevel}, 0, 0, ${zoomLevel}, ${contentOffsetAfterZooming.x}, ${contentOffsetAfterZooming.y})`,\n          });\n\n          setCSSStyles(this.state.placeholderElement, {\n            width: `${zoomedContentSize.width + contentOffsetAfterZooming.x}px`,\n            height: `${zoomedContentSize.height + contentOffsetAfterZooming.y}px`,\n          });\n\n          this.setScrollPosition(newScrollPosition);\n\n          // Remove event listener\n          if (transitionEndEvent) {\n            this.state.zoomContentElement.removeEventListener(transitionEndEvent, afterTransition, false);\n          }\n\n          // Update states\n          this.state.zoomLevel = zoomLevel;\n          this.state.contentOffset = contentOffsetAfterZooming;\n\n          this.state.lastPinchFocalPoint = null;\n          this.state.lastPinchOffset = null;\n          this.state.lastPinchOrigin = null;\n          this.state.lastPinchZoomLevel = null;\n\n          this.state.isZooming = false;\n        };\n\n        if (this.state.lastPinchOffset.x !== transformOffset.x || this.state.lastPinchOffset.y !== transformOffset.y) {\n          // Add event listener to execute afterTransition()\n          this.state.zoomContentElement.addEventListener(transitionEndEvent, afterTransition, false);\n\n          // Move to correct position\n          setCSSStyles(this.state.zoomContentElement, {\n            transitionDuration: zoomDuration,\n            transitionTimingFunction: zoomEasing,\n            transform: `matrix(${zoomLevel}, 0, 0, ${zoomLevel}, ${transformOffset.x}, ${transformOffset.y})`,\n          });\n        } else {\n          afterTransition();\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""}